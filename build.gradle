plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-spring-boot-application' version '6.1.3'
    id 'me.qoomon.git-versioning' version "2.1.1"
}

group = 'inc.roms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.microsoft.azure:applicationinsights-spring-boot-starter:2.5.1'
    implementation 'com.microsoft.azure:applicationinsights-logging-logback:2.5.1'
    
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework:spring-aspects'
    implementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'
    implementation 'com.auth0:java-jwt:3.10.2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'com.opencsv:opencsv:5.0'

    implementation 'org.apache.httpcomponents:httpclient:4.4.1'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.0.5'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'

    implementation 'org.usb4java:usb4java-javax:1.3.0'

    implementation 'org.flywaydb:flyway-core'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

//    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'org.testcontainers:postgresql:1.14.3'
    testCompile 'org.awaitility:awaitility:4.0.2'
    testCompile 'io.zonky.test:embedded-database-spring-test:1.5.2'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
}

gitVersioning.apply {
    tag {
        versionFormat = '${tag}'
        property {
            pattern ='release_version'
            value {
                format = '${tag}'
            }
        }
    }
}

springBoot {
    buildInfo()
}

dockerPushImage.dependsOn tasks.version
bootBuildInfo.dependsOn tasks.version

docker {
    springBootApplication {
        baseImage = 'openjdk:11'
        images = [
                "${dockerRegistryURL}/romspolska/storemanagement/rcs-store-management:$version"
        ]
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n','-javaagent:/app/resources/azure/applicationinsights-agent-2.5.1.jar']
    }
    registryCredentials {
        url = dockerRegistryURL
        username = dockerUsername
        password = dockerPassword
    }
}